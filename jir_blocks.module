<?php

use Drupal\block\Entity\Block;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;

/**
 * Implements hook_theme().
 */
function jir_blocks_theme($existing, $type, $theme, $path)
{
    $request = Drupal::request();

    $host = $request->getSchemeAndHttpHost();
    $currentPath = Drupal::service('path.current')->getPath();
    $aliasPath = Drupal::service('path.alias_manager')->getAliasByPath($currentPath);

    $currentURL = $host . $aliasPath;

    $route_match = Drupal::routeMatch();
    $current_title = Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());

    $facebook = 'http://www.facebook.com/sharer/sharer.php?u=' . $currentURL;
    $twitter = 'http://twitter.com/share?url=' . $currentURL . '&text=' . $current_title;
    $linkedin = 'http://www.linkedin.com/shareArticle?url=' . $currentURL . '&title=' . $current_title;
    $google = 'https://plus.google.com/share?url=' . $currentURL;

    $servicesStr = strval(Drupal::configFactory()->get('jix_settings.sites.services')->get('our_services'));
    Drupal::logger('jixBlocks')->info('Services: ' . $servicesStr);
    $services = empty($servicesStr) ? explode('|', $servicesStr) : array();

    return [
        'jix_share_buttons' => [
            'variables' => [
                'facebook' => $facebook,
                'twitter' => $twitter,
                'linkedin' => $linkedin,
                'google' => $google
            ]
        ],
        'jix_copyright' => [
            'variables' => [
                'year' => date('Y'),
                'terms' => Node::load(90),
                'privacy' => Node::load(91),
                'owner' => Drupal::config('system.site')->get('owner'),
                'admin' => t('Gestion du site')
            ]
        ],
        'jix_address' => [
            'variables' => [
                'title' => t('Get in touch'),
                'owner' => Drupal::config('system.site')->get('owner'),
                'address1' => Drupal::config('system.site')->get('address_line_1'),
                'address2' => Drupal::config('system.site')->get('address_line_2'),
                'phone' => Drupal::config('system.site')->get('phone'),
            ]
        ],
        'jix_services' => [
            'variables' => [
                'title' => t('Our services'),
                'services' => $services
            ]
        ],
        'jix_jobs_sites' => [
            'variables' => [
                'title' => t('Jobs elsewhere')
            ]
        ],
        'jix_realtime_stats' => [
            'variables' => [
                'title' => t('Realtime figures'),
                'jobs_count' => 0,
                'employers_count' => 0
            ]
        ]
    ];
}

/**
 * Implements hook_entity_insert().
 */
function jir_blocks_entity_insert(EntityInterface $entity)
{
    if ($entity instanceof NodeInterface and $entity->bundle() == 'banner') {

        $block = Block::create(array(
            'id' => $entity->getTitle() . '_' . rand(5, 10),
            'type' => 'banner_block',
            'plugin' => 'block_content'
        ));

        $block->set('info', $entity->getTitle());
        $block->set('field_banner_image', $entity->get('field_banner_image')->entity->url());
        $block->set('field_banner_type', $entity->get('field_banner_type')->value);
        $block->set('field_banner_url', $entity->get('field_banner_url')->value);

        try {
            $entity->set('field_banner_block_id', $block->save());
        } catch (EntityStorageException $e) {
            Drupal::logger('jir_blocks')->error('Creating Banner block failed: ' . $e->getMessage());
        }
    }
}